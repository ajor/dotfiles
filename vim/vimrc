syntax on
set background=dark

" Show line number in bottom right corner of screen
set ruler

" Make backspace work as normal in insert mode
set backspace=indent,eol,start

" Indentation
set expandtab
set tabstop=2
set shiftwidth=2
set smarttab
set autoindent

" Searching
set hlsearch    " Highlight all search results
set ignorecase  " Ignore case in search patterns
set smartcase   " Override 'ignorecase' if search contains upper case characters

" Use Bash-style tab completion
set wildmode=longest,list
set wildmenu
set wildignore=*.o,*.swp

set foldmethod=syntax
set foldlevel=999

" Persistent undo
set undodir=~/.vim/undodir
set undofile
set undolevels=1000
set undoreload=10000

" File type indentation
set nocompatible
filetype plugin indent on
syntax enable

" Use jk as escape
inoremap jk <esc>
cnoremap jk <c-c>

" Ctags
set tags=./tags;/

" Use Ctrl-n to jump up the tag stack (opposite of Ctrl-t)
nnoremap <c-n> :tag<cr>

" Spell checking
map <F5> :setlocal spell! spelllang=en_gb<CR>

" Delete comment character when joining commented lines
set formatoptions+=j

" vim-plug
call plug#begin('~/.vim/plugged')

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'ludovicchabant/vim-gutentags'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'

call plug#end()

set ssop-=options    " do not store global and local values in a session
set ssop-=folds      " do not store folds

let g:ctrlp_user_command = {
  \ 'types': {
    \ 1: ['.git/', 'cd %s && git ls-files'],
    \ },
  \ 'fallback': 'find %s -type f'
  \ }

" Edit macros
nnoremap <leader>m  :<c-u><c-r>='let @'. v:register .' = '. string(getreg(v:register))<cr><c-f><left>
